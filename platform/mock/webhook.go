// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yangwenz/model-serving/platform (interfaces: Webhook)

// Package mockplatform is a generated GoMock package.
package mockplatform

import (
	reflect "reflect"

	platform "github.com/yangwenz/model-serving/platform"
	gomock "go.uber.org/mock/gomock"
)

// MockWebhook is a mock of Webhook interface.
type MockWebhook struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookMockRecorder
}

// MockWebhookMockRecorder is the mock recorder for MockWebhook.
type MockWebhookMockRecorder struct {
	mock *MockWebhook
}

// NewMockWebhook creates a new mock instance.
func NewMockWebhook(ctrl *gomock.Controller) *MockWebhook {
	mock := &MockWebhook{ctrl: ctrl}
	mock.recorder = &MockWebhookMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhook) EXPECT() *MockWebhookMockRecorder {
	return m.recorder
}

// CreateNewTask mocks base method.
func (m *MockWebhook) CreateNewTask(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewTask", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewTask indicates an expected call of CreateNewTask.
func (mr *MockWebhookMockRecorder) CreateNewTask(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewTask", reflect.TypeOf((*MockWebhook)(nil).CreateNewTask), arg0, arg1, arg2)
}

// GetTaskInfo mocks base method.
func (m *MockWebhook) GetTaskInfo(arg0 string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskInfo", arg0)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskInfo indicates an expected call of GetTaskInfo.
func (mr *MockWebhookMockRecorder) GetTaskInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskInfo", reflect.TypeOf((*MockWebhook)(nil).GetTaskInfo), arg0)
}

// UpdateTaskInfo mocks base method.
func (m *MockWebhook) UpdateTaskInfo(arg0 platform.TaskInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTaskInfo", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTaskInfo indicates an expected call of UpdateTaskInfo.
func (mr *MockWebhookMockRecorder) UpdateTaskInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTaskInfo", reflect.TypeOf((*MockWebhook)(nil).UpdateTaskInfo), arg0)
}
